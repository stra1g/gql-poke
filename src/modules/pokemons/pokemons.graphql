type Pokemon {
  id: Int!
  name: String!
  type: String!
  created_at: String!
}

enum PokemonFields {
  id
  name
  type
  created_at
}

enum SortDirection {
  asc
  desc
}

input SortingParams {
  field: PokemonFields!
  direction: SortDirection!
}

input PaginationParams {
  page: Int!
  perPage: Int!
}

type Query {
  findManyPokemon(sortingParams: SortingParams): [Pokemon!]!
  paginatePokemon(
    paginationParams: PaginationParams
    sortingParams: SortingParams
  ): [Pokemon!]!
}

input CreatePokemonInput {
  name: String!
  type: String!
}

input UpdatePokemonInput {
  name: String
  type: String
}

type Mutation {
  createOnePokemon(createPokemonPayload: CreatePokemonInput): Pokemon!
  updateOnePokemon(id: ID!, updatePokemonPayload: UpdatePokemonInput): Pokemon!
  deleteOnePokemon(id: ID!): Boolean!
}
